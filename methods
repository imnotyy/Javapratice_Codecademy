/* Scope execrise
  author: imnotyy
  date: Feb. 28

*/

//Original questions:
public class Store {
  // instance fields
  String productType;
  
  // constructor method
  public Store(String product) {
    productType = product;
  }
  
  // advertise method
  public void advertise() {
    String message = "Selling " + productType + "!";
		System.out.println(message);
  }
  
  // main method
  public static void main(String[] args) {
    String cookie = "Cookies";
    Store cookieShop = new Store(cookie);
    
    cookieShop.advertise();
  }
}

/*
Task 1:
Inside of the advertise() method, change the productType variable to the cookie variable, 
which is declared in the main() method. 
This should also result in the printout:  Selling cookies!

Right?  
*/

/*
Taks 3 :Inside of the main() method, print the String message, which is declared in the advertise() method. This should print:

Selling Cookies!
Right?

*/

public class Store {
  // instance fields
  String productType;
  
  // constructor method
  public Store(String product) {
    productType = product;
  }
  
  // advertise method                               
  public void advertise() {
    String message = "Selling " + productType + "!";        //String message = "Selling " + cookie + "!"  ----> error 
		System.out.println(message);                            //No! We got an error! The cookie variable cannot be accessed inside of the advertise method. 
                                                            //The scope is wrong! 
  }
  
  // main method
  public static void main(String[] args) {
    String cookie = "Cookies";
    Store cookieShop = new Store(cookie);            
    //Task 3 : System.out.println(message); -----> error  //Foiled again! 
                                                          //The message variable only exists inside the scope of the advertise() method!
    cookieShop.advertise();
    
  }
}



/*
	review of method unit
	author: imnotyy
	date: March.1.2023

*/

public class SavingsAccount {
  
  int balance;
  
  public SavingsAccount(int initialBalance){
    balance = initialBalance;
  }

  //Check balance method
  public void checkBalance(){
    System.out.println("Hello!");
    System.out.println("Your balance is "+ balance);
  }
  
  //deposit method
  public void deposit(int amountToDeposit){
    balance = balance + amountToDeposit;
    System.out.println("You just deposited" + amountToDeposit);
    
  }

  //withdarw method

  public int withdraw (int amountToWithdraw){
    balance = balance - amountToWithdraw;
    System.out.println("You just withdrew " + amountToWithdraw );
    return amountToWithdraw;
    //System.out.println("You just withdrew " + amountToWithdraw );
    /*
    if output after return statement, it comes with error--missing return statement.
    and line 112 would become error unreachable statement.
    so output need to be infront of return. if the method return value is int.
    
    
    */

  }
  public static void main(String[] args){
    SavingsAccount savings = new SavingsAccount(2000);
    
    //Check balance:
    /*System.out.println("Hello!");
    System.out.println("Your balance is "+savings.balance);
    */
    savings.checkBalance();
    //Withdrawing:
    savings.withdraw(300);
    /*
    need to put 300 as argument since 
    withdraw method with an int parameter.
    */
    /*int afterWithdraw = savings.balance - 300;
    savings.balance = afterWithdraw;
    System.out.println("You just withdrew "+300);
    */
    savings.checkBalance();
    //Check balance:
    /*System.out.println("Hello!");
    System.out.println("Your balance is "+savings.balance);
    */
    savings.deposit(600);
    //Deposit:
    /*
    int afterDeposit = savings.balance + 600;
    savings.balance = afterDeposit;
    System.out.println("You just deposited "+600);
    */
    savings.checkBalance();
    //Check balance:
    /*
    System.out.println("Hello!");
    System.out.println("Your balance is "+savings.balance);
    */
    savings.deposit(600); 
    /*
    need to put argument in deposit like int 600. because the parameter of deposit method required int parameter.
    
    */

    //Deposit:
    /*int afterDeposit2 = savings.balance + 600;
    savings.balance = afterDeposit2;
    System.out.println("You just deposited "+600);
    */
    savings.checkBalance();
    //Check balance:
    /*System.out.println("Hello!");
    System.out.println("Your balance is "+savings.balance);
    */
  }       
}
